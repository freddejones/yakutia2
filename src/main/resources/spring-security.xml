<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:security="http://www.springframework.org/schema/security"
        xsi:schemaLocation="
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">


    <security:http auto-config="true" use-expressions="true" access-denied-page="/krams/auth/denied" >
        <security:intercept-url pattern="/js/auth/*" access="permitAll"/>
        <security:intercept-url pattern="/css/*" access="permitAll"/>
        <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/*" access="hasRole('ROLE_USER')"/>

        <security:openid-login
                login-page="/js/auth/login.html"
                authentication-failure-url="/js/auth/login.html?error=true"
                default-target-url="/index.html"
                authentication-success-handler-ref="feedSuccessHandler"
                user-service-ref="yakutiaUserProvider">

            <security:attribute-exchange>
                <security:openid-attribute name="oiContactEmail" type="http://schema.openid.net/contact/email" required="true"/>
            </security:attribute-exchange>
        </security:openid-login>

        <security:logout
                invalidate-session="true"
                logout-success-url="/js/auth/login.html"
                logout-url="/auth/logout"
                delete-cookies="true"/>

        <security:session-management invalid-session-url="/" session-fixation-protection="none" session-authentication-error-url="/js/auth/access_denied">
            <security:concurrency-control max-sessions="1" expired-url="/js/auth/login.html?session=expired" />
        </security:session-management>


    </security:http>

    <!-- Declare an authentication-manager to use a custom userDetailsService -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="yakutiaUserProvider">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
    <beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

</beans:beans>